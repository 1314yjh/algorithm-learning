<?php
// php版本的数组实现的队列。
class ArrayQueue {
    
    private $items = [];
    private $size = 0;

    private $head = 0;
    private $tail = 0;
    // $capacity 数组队列的大小。
    public function __construct($capacity) {
        $this->items = [];
        $this->size = $capacity;
    }

    // 入队列
    public function enqueue($item) {
        // 队尾等于队列大小，说明到了队尾了。
        if($this->tail == $this->size) {
            // 说明队列满了
            if($this->head == 0) return false;
            // 没有空间了，需要数据搬移
            for($i = $this->head; $i < $this->tail; $i++) {
                $this->items[$i - $this->head] = $this->items[$i];
            }
            // 搬移完之后重新更新head和tail
            $this->tail -= $this->head;
            $this->head = 0;
        }
 
        $this->items[$this->tail] = $item;
        ++$this->tail;
        return true;
    }

    // 出队列
    public function dequeue() {
        if($this->tail == $this->head) return null;

        $ret = $this->items[$this->head];
        ++$this->head;
        return $ret;
    }
}

$myArrayQueue = new ArrayQueue(3);
var_dump($myArrayQueue->enqueue(1));// bool(true)
var_dump($myArrayQueue->enqueue(2));// bool(true)
var_dump($myArrayQueue->enqueue(3));// bool(true)
var_dump($myArrayQueue->enqueue(4));// bool(false)

var_dump($myArrayQueue->dequeue());// int(1)
var_dump($myArrayQueue->dequeue());// int(2)
var_dump($myArrayQueue->dequeue());// int(3)

var_dump($myArrayQueue->enqueue(5));// bool(true);
var_dump($myArrayQueue->dequeue());// int(5)
var_dump($myArrayQueue->dequeue());// NULL

var_dump($myArrayQueue->enqueue(5));// bool(true);
var_dump($myArrayQueue->dequeue());// int(5)








